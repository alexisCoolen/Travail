def genere_grille():
    '''
    Description : Fonction qui initialise la grille du jeu
    return grille (lst) : une liste de listes représentant la grille du jeu.
    '''
    grille = [[7*0], [7*0], [7*0], [7*0], [7*0], [7*0]]
    return grille
    
def affiche_grille(grille):
    '''Description : Fonction qui affiche la grille du jeu à l'envers.
    case vide = 0, pion rouge = 1, pion jaune=2.
    Les numéros de colonne de 1 à 7 doivent apparaître en dessous de la grille.
    grille (lst) = la liste des listes représentant la grille du jeu
    return (None)
    '''
    
    for k in range(6):
        print(grille[5-k])
    print(' 0 1 2 3 4 5 6 ')
    print(10*"_")

def numero_ligne(grille, colonne):
    '''Description : Fonction qui renvoie la première ligne non remplie de la grille.
    grille(lst) : la liste des listes représentant la grille du jeu
    colonne(int) :
    return ligne(int) : numéro de ligne à jouer
    '''
    for colonne in range(len(grille)):
        print(colonne-6)
    return colonne
        
    
    
def alignement_diagonal(grille, position, joueur):
    '''Description : Fonction qui teste si 4 pions du joueur sont alignés sur une diagonale;
    grille(lst) :   Liste de liste représentant la grille courante du jeu;
    position(tuple) : représente les coordonnées du pion qui vient d'être joué;
    joueur(int) : 1 si le joueur est le numéro 1, 2 si le joueur 2;
    return alignes(bool) : vrai si joueur gagne, Faux sinon.
    '''
alignes = False
    nbre_pion = 0
    ligne = position[0]
    colonne = position[1]
    somme = ligne + colonne
    if somme < 6:
        # Antitriangulaire inférieur
        k = 0
        while k <= somme and not alignes:
            if grille[ligne][colonne]== joueur :
                nbre_pion = nbre_pion+1
                alignes = True
            else :
                nbre_pion = 0
            k = k+1
    else:
        # Antitriangulaire supérieur
        k = somme - 6
        while k <= 5 and not alignes:
            if grille[ligne][colonne]== joueur :
                nbre_pion = nbre_pion+1
                alignes = True
            else :
                nbre_pion = 0
            k = k+1
    return alignes
