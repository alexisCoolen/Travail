def nbre_lignes_fichier(nom_fichier):
    '''
    Description : renvoie le nombre de lignes dans un fichier
    nom_fichier (str): nom de fichier
    return (int) : Nombre de lignes dans le fichier.
    '''
    n = 0
    with open(nom_fichier) as fich:
        while fich.readline():
            n = n + 1
    return n

def choisir_mot(nom_fichier):
    '''
    Description : renvoie un mot tiré au hasard dans le fichier
    nom_fichier (str): nom de fichier contenant un mot par ligne
    return mot (str) : mot du fichier.
    '''
    nbre_mots = nbre_lignes_fichier(nom_fichier)
    numero_ligne = randint(1,nbre_mots)
    with open(nom_fichier) as f:
        for k in range(numero_ligne-1):
            f.readline()
        mot = f.readline()
        mot = mot[0:len(mot)-1]
    return mot
    
def caract_ss_accent(caractere):
    lst_accent = ['é', 'è', 'ê', 'à', 'â', 'ù', 'û', 'î', 'ô','ç']
    sans_accent = ['e', 'e', 'e', 'a', 'a', 'u', 'u', 'i', 'o', 'c']
    carac = caractere
    k = 0
    while k < len(lst_accent):
        if caractere == lst_accent[k]:
            carac = sans_accent[k]
        k = k+1
    return carac

def enleve_accent(mot):
    '''
    Description : mettre le mot en miniscules sans accent et
        retourne la liste des lettres le composant
    mot (str): nom de fichier contenant un mot par ligne
    return  lst_lettres (list) : liste des lettres composant mot.
    '''
    k = 0
    liste_de_mot = []
    for k in range(len(mot)):
        c = caract_ss_accent(mot[k])
        liste_de_mot.append(c)
    return liste_de_mot

def cree_lst_tirets(lst_lettres):
    '''
    Description : créé liste de tirets avec autant de caractères 
    lst_lettres (list): liste des lettres
    return  lst_tirets (list) : liste des tirets composant le mot recherché..
    '''
    lst_tirets = []
    for k in range(len(lst_lettres)):
        lst_tirets.append("_")
    return lst_tirets
    
    def propose_lettre(lettres_deja_choisis):
    '''
    Description : interface avec l'utilisateur pour choisir une lettre
        On vérifie si la lettre était dans l'ensemble des lettres déja choisies
    lettres_deja_choisis (set): ensemble des lettres déja choisies
    return lettre (str) : la lettre choisie par l'utilisateur
    '''
    lettre_propose = input ('Proposez une lettre ')
        while lettre_propose in lettres_deja_choisis:
            print("La liste des lettres est ", lettres_deja_choisis)
        lettre_propose = input ('Proposez une autre lettre ')
    return lettre_propose

def pendu(fichier):
    '''
    Description : fonction principale du jeu de pendu
    lst_secrete (list): liste des lettres composant le mot recherché
    lettres_deja_choisis (set): ensemble des lettres déjà choisies
    chaine_tirets (list): liste à tirets avec des lettres
    return  (bool) : Vrai si la lettre est trouvée
    '''
    chaine_tirets = []
    for k in range(len(lst_secrete)):
        chaine_tirets.append("_")
    return chaine_tirets
    for i in range(len(lst_secrete):
        if lettre_deja_choisis in lst_secrete[k]:
            return True
            print ("Ensemble des lettres choisis :", lettres_deja_choisis)
    
